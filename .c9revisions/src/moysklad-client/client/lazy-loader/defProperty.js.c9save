{"ts":1398843245885,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/**\n * defProperty\n * Date: 29.04.14\n * Vitaliy V. Makeev (w.makeev@gmail.com)\n */\n\nvar _ = require('lodash');\n\n\n/**\n * Создает совойство, при обращении к которому происходит ленивая загрузка сущности(ей)\n * \n * @param {object} entity Объект к которому привязывается свойство\n * @param {string} propertyName Имя создаваемого свойства\n * @param {string | Array.<string>} uuids Идентификатор или массив идентификаторов\n * @param {string} path Путь к текущему совойству\n * @param {Array} batches Массив определителей свойств для списка групповой загрузки\n * @param {object} containerEntity Базовый объект МойСклад (напр. CustomerOrder) который содержит текущее свойство propertyName\n */\nfunction defProperty (entity, propertyName, uuids, path, batches, containerEntity) {\n    if (!uuids) return;\n\n    var batchName = _.find(batches, function(batchItem) {\n        //noinspection JSReferencingMutableVariableFromClosure\n        //TODO !!! Нужно быть точно уверенным что в пачку могут попасть uuid только сущностей одного типа\n        return path.slice(-batchItem.length) == batchItem; \n    });\n\n    if (batchName) this.addUuidsToBatch(batchName, uuids);\n\n    var that = this;\n    //TODO !!! Функционал getTypeOfProperty нужно перемесить в customFetch\n    //TODO Возможно получение Demands решить аналогично через customFetch, а не через batch\n    Object.defineProperty(entity, propertyName, {\n        get: function () {\n            var type = that.getTypeOfProperty(propertyName, entity);\n            return that.getEntities(type, uuids, path, batchName, batches, containerEntity);\n        },\n        enumerable: true,  //TODO false ?\n        configurable: false\n    });\n}\n\nmodule.exports = defProperty;"]],"start1":0,"start2":0,"length1":0,"length2":1698}]],"length":1698}
